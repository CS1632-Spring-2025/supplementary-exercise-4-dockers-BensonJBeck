// Generated by Selenium IDE
package edu.pitt.cs;
import static org.hamcrest.MatcherAssert.assertThat;
import java.time.Duration;
import org.openqa.selenium.chrome.ChromeOptions;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class PittEduTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;

	@Before
	public void setUp() {
		ChromeOptions options = new ChromeOptions();
		options.addArguments("--headless");			// Enable running without a display
		options.addArguments("--disable-notifications");
		options.addArguments("--disable-dev-shm-usage");	// Disable /dev/shm which is limited to 64MB in Docker and use /tmp/ instead to store shared memory files
		options.addArguments("--no-sandbox");		// A quick and dirty way to run Selenium as root, bypassing the OS security model
		driver = new ChromeDriver(options);
		driver.manage().timeouts().implicitlyWait(Duration.ofSeconds(10));
		driver.manage().window().setSize(new Dimension(1200, 800));
		js = (JavascriptExecutor) driver;
		vars = new HashMap<String, Object>();
	}
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void tEST1TITLE() {
    driver.get("https://www.pitt.edu//");
    assertThat(driver.getTitle(), is("Home | University of Pittsburgh"));
  }
  @Test
  public void tEST2LOGOEXISTS() {
    driver.get("https://www.pitt.edu//");
    {
      List<WebElement> elements = driver.findElements(By.xpath("//img[@alt=\'University of Pittsburgh\']"));
      assert(elements.size() > 0);
    }
  }
  @Test
  public void tEST3LOGOIMAGE() {
    driver.get("https://www.pitt.edu//");
    {
      WebElement element = driver.findElement(By.cssSelector(".logo img"));
      String attribute = element.getAttribute("src");
      vars.put("src_value", attribute);
    }
    assertEquals(vars.get("src_value").toString(), "/themes/custom/pitt_default/logo.svg");
  }
  @Test
  public void tEST4SCHOOLSSCI() {
    driver.get("https://www.pitt.edu/");
    driver.manage().window().setSize(new Dimension(1440, 812));
    driver.findElement(By.cssSelector(".icon-hamburger")).click();
    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
    wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("block-collegesschools-menu")));
    assertThat(driver.findElement(By.xpath("//div[@id=\'menu-blockquick-links-3\']/ul/li[3]/a")).getText(), is("Computing & Information"));
  }
  @Test
  public void tEST5SCHOOLSCOUNT() {
    driver.get("https://www.pitt.edu/");
    driver.manage().window().setSize(new Dimension(1200, 756));
    driver.findElement(By.cssSelector(".icon-hamburger")).click();
    {
      List<WebElement> elements = driver.findElements(By.xpath("//div[@id=\'menu-blockquick-links-3\']/ul/li[16]/a"));
      assert(elements.size() > 0);
    }
    {
      List<WebElement> elements = driver.findElements(By.xpath("//div[@id=\'menu-blockquick-links-3\']/ul/li[17]/a"));
      assert(elements.size() == 0);
    }
  }
  @Test
  public void tEST6SEARCHCSC() {
    driver.get("https://www.pitt.edu//");
    driver.findElement(By.cssSelector(".icon-search")).click();
	WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(30));
    wait.until(ExpectedConditions.elementToBeClickable(By.id("gsc-i-id1")));
    driver.findElement(By.id("gsc-i-id1")).click();
    driver.findElement(By.id("gsc-i-id1")).sendKeys("computer science club");
    driver.findElement(By.id("gsc-i-id1")).sendKeys(Keys.ENTER);
    wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[10]/div/div/div/a")));
    {
      List<WebElement> elements = driver.findElements(By.cssSelector(".gsc-expansionArea"));
      assert(elements.size() > 0);
    }
  }
}
